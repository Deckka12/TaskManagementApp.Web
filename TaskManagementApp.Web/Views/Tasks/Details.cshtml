@model TaskManagementApp.Application.DTOs.TaskDTO

@{
	ViewData["Title"] = "Просмотр задачи";
	double totalHours = Model.workLogs.Sum(log => log.HoursSpent);
}
<link rel="stylesheet" href="~/css/Tasks.css" />

<div class="container mt-4">
	<h2 class="text-center mb-4">Просмотр задачи</h2>

	<div class="card shadow-sm border-0 p-4 shadowdiv">
		<div class="d-flex justify-content-between align-items-center theme">
			<h3 class="text-primary fw-bold mb-3">@Model.Title</h3>
		</div>

		<div class="row blockRow">
			<div class="col-md-6 d-flex align-items-center">
				<h5 class="me-2">Статус</h5>
				<span class="badge fs-6 @(Model.Status == TaskManagementApp.Domain.Enums.TaskStatus.Completed ? "bg-success" :
                                    Model.Status == TaskManagementApp.Domain.Enums.TaskStatus.InProgress ? "bg-warning" : "bg-secondary")">
					@Model.Status
				</span>
			</div>
			<div class="col-md-6 d-flex align-items-center">
				<h5 class="me-2">Приоритет</h5>
				<span class="badge fs-6 @(Model.Priority == TaskManagementApp.Domain.Enums.TaskPriority.High ? "bg-danger" :
                                    Model.Priority == TaskManagementApp.Domain.Enums.TaskPriority.Medium ? "bg-warning" : "bg-primary")">
					@Model.Priority
				</span>
			</div>

			<h5>Общее время: <strong>@totalHours ч</strong></h5>
		</div>
		<div class="divflex divjustife">
			<div class="width100">
			 <h5>Описание:</h5>
				<p class="text-muted">@(string.IsNullOrEmpty(Model.Description) ? "Нет описания" : Model.Description)</p>
			</div>
			
		</div>
		<div class="d-flex justify-content-between mt-4">
			<a class="btn btn-outline-secondary d-flex align-items-center" asp-action="Index">
				<i class="fas fa-arrow-left me-2"></i> Назад
			</a>
			<div class="divflex">
				<a class="btn btn-outline-primary d-flex align-items-center me-2" asp-action="Edit" asp-route-id="@Model.Id">
					<i class="fas fa-edit me-2"></i> Редактировать
				</a>
				<a class="btn btn-outline-danger d-flex align-items-center" asp-action="Delete" asp-route-id="@Model.Id"
				   onclick="return confirm('Вы уверены, что хотите удалить эту задачу?');">
					<i class="fas fa-trash-alt me-2"></i> Удалить
				</a>
			</div>
		</div>
	</div>

	<hr />

	<!-- Вкладки -->
	<ul class="nav nav-tabs mt-4" id="taskTabs">
		<li class="nav-item">
			<button class="nav-link active" id="worklogs-tab" data-bs-toggle="tab" data-bs-target="#worklogs" type="button">
				Трудозатраты
			</button>
		</li>
		<li class="nav-item">
			<button class="nav-link" id="comments-tab" data-bs-toggle="tab" data-bs-target="#comments" type="button">
				Комментарии
			</button>
		</li>
	</ul>

	<div class="tab-content mt-3" id="taskTabsContent">
		<!-- Вкладка Трудозатраты -->
		<div class="tab-pane fade show active" id="worklogs">
			@await Html.PartialAsync("_AddWorkLog", new TaskManagementApp.Application.DTOs.WorkLogDto { TaskId = Model.Id })

			<h3 class="mt-4">📜 История трудозатрат</h3>

			@if (Model.workLogs.Any())
			{
					<div class="table-responsive">
						<table class="table table-hover table-bordered shadow-sm">
							<thead class="table-light">
								<tr>
									<th>👤 Пользователь</th>
									<th>⏳ Время (ч)</th>
									<th>🏷️ Тип работы</th>
									<th>💬 Комментарий</th>
									<th>📅 Дата</th>
								</tr>
							</thead>
							<tbody>
							@foreach (var log in Model.workLogs)
							{
										<tr>
											<td>
												<span class="badge bg-primary text-white">@log.User.Name</span>
											</td>
											<td>@log.HoursSpent</td>
											<td>@log.WorkType</td>
											<td>@log.Comment</td>
											<td>@log.Date.ToString("dd.MM.yyyy HH:mm")</td>
										</tr>
							}
							</tbody>
						</table>
					</div>
			}
			else
			{
					<p class="text-muted">❌ Трудозатраты отсутствуют.</p>
			}


		</div>

		<!-- Вкладка Комментарии (пока пустая) -->
		<div class="tab-pane fade" id="comments">
			<p class="text-muted">💬 Раздел комментариев пока не реализован.</p>
		</div>
	</div>

</div>
